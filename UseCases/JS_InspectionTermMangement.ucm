Use-Case Model: Inspection_term_management

Trigger: Actor sends cancelling_action event
Flow A : cancelling_event_handler
A1. "The system asks for cancelling confirmation"
A2. "An actor confirm decision"
A3. System verifies that "actor requested to cancel action document"
A4. The use-case ends with failure

Flow B: An_actor_doesn't_confirm_cancellation
B1.A3. System verifies that "actor doesn't want to cancel"
B2. Goto ctx

Use-Case: Create_inspection_term

Preconditions:
- "actor is logged into the system"
- "semesters has been selected"

Postcondition (success):
- "inspection term is created"
- "actor recieves creating confirmation"

Postcondition (failure):
- "inspection term is not created"


Trigger: Actor wants "the system to create a inspection term"


Main flow:
1. "System show sorted employees available for inspection"
2. "Actor select the employee to be inspected"
3. "System show sorted classes available for inspection"
4. "Actor select classes to be inspected"
5. "System show available dates for selected employee and class"
6. "Actor selects the date for inspection"
7. "System show sorted possible inspectors group who are available on the selected date"
8. "Actor selects the inspectors group"
9. "Actor save inspection term"
10. System verifies that "the selected are valid or do not conflict with other inspections"
12. The use-case ends with success.

Steps 2.-8. can be interrupted by cancelling_action event with ctx

Flow C: Inspection_data_are_invalid_or_in_conflict
C1.10. System verifies that "the order data are invalid or in conflict"
C2. "System highlights invalid fields and provides error messages"
C3. Goto 1.


Use-Case: Edit_inspection_term

Preconditions:
- "actor is logged into the system"
- "semesters has been selected"

Postcondition (success):
- "inspection term is updated successfully in the system"
- "actor recieves edit confirmation"


Trigger: Actor wants "the system to edit an existing inspection term."

Main flow:
1. "System show sorted list of inspection terms to edit."
2. "Actor selects the inspection term to edit."
3. "Actor selects a new date and/or inspection groups available at this time"
4. "Actor save changes"
5. The use-case ends with success.

Steps 3.-4. can be interrupted by cancelling_action event with ctx

Flow G: Inspection_conducted
E1.2. System verifies that "the selected Inspection term already has been conducted"
E2. "System informs the actor that the term cannot be deleted"
E3. Goto 1.

Use-Case: Delete_inspection_term

Preconditions:
- "actor is logged into the system"
- "semesters has been selected"

Postcondition (success):
- "inspection term has been deleted from the system"
- "actor recieves delete confirmation"

Postcondition (failure):
- "inspection term remains in the system"

Trigger: Actor wants "the system to delete a inspection term."

Main flow:
1. "System show sorted list of inspection terms to delete"
2. "Actor selects the specific inspection term to delete"
3. System verifies that "the inspection term hasn't been conducted"
4. "System asks the actor to confirm the deletion"
5. "Actor confirms the deletion"
6. The use-case ends with success.

Flow E: Inspection_conducted
E1.2. System verifies that "the selected Inspection term already has been conducted"
E2. "System informs the actor that the term cannot be deleted"
E3. The use-case ends with failure.

Flow F: Actor_cancels_deletion
F1.4. "Actor chooses not to confirm the deletion"
F2. "System retains the inspection term"
F3. The use-case ends with failure.